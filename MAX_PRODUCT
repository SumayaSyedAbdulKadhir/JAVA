import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int[] arr = {2,4,5,-10,-8,3,6};
		System.out.print("Maximum product :"+master(arr));
	}
	public static int master(int[] arr){
	    int min1,min2,max1,max2;
	    min1 = Integer.MAX_VALUE;
	    min2 = Integer.MAX_VALUE;
	    max1 = Integer.MIN_VALUE;
	    max2 = Integer.MIN_VALUE;
	    for(int i : arr){
	        if(i>max1){
	            max2=max1;
	            max1=i;
	        }
	        else if(i>max2){
	            max2 = i;
	        }
	        if(i<min1){
	            min2=min1;
	            min1=i;
	        }
	        else if(i<min2){
	            min2 = i;
	        }
	    }
	    return min1*min2>max1*max2?min1*min2:max1*max1;
	}
}

(OR)

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int[] arr = {2,4,5,-10,8,3,6};
		System.out.print("Maximum product :"+master(arr));
	}
	public static int master(int[] arr){
	    int n = arr.length;
	    Arrays.sort(arr);
	    return Math.max(arr[n-2]*arr[n-1],arr[0]*arr[1]);
	}
}

(OR)
 If the negative no is given convert it to positive and find max product

import java.util.Arrays;

public class MaxProduct {
    public static void main(String[] args) {
        int[] arr = {2, 4, 5, -10, 8, 3, 6};
        System.out.println(master(arr));
    }

    public static int master(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n; i++) {
            arr[i] = Math.abs(arr[i]);
        }
        Arrays.sort(arr);
        return arr[n - 1] * arr[n - 2];
    }
}
